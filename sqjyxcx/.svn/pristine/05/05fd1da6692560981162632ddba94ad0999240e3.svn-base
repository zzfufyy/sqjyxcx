// pages/jlxg/jlxg.js

const { UserService, user } = require('../../service/user_service');
const { getPortraitUrl } = require('../../utils/string_util');
const { Api } = require('../../common/api');
const loading = require('../../utils/loading_util');


const app = getApp();

Page({
	/**
	 * 页面的初始数据
	 */
	data: {
		tximg: '',
		zsname: '',
		array: user.genderList,
		index: 0,
		phonenum: '15711166666',
		borthday: '1990',
		worktime: '1-3',
	},
	// 性别选择
	bindPickerChange: function (e) {
		console.log('picker发送选择改变，携带值为', e.detail.value)
		this.setData({
			index: e.detail.value
		})
	},

	//点击修改头像
	xgtx() {
		let $this = this;
		wx.chooseMedia({
			count: 1,
			mediaType: ['image'],
			sourceType: ['album', 'camera'],
			camera: ['back', 'front'],

		}).then((res) => {
			debugger
			if (res.tempFiles.length) {
				let url = Api.contact('/user-candidate/uploadPortrait');
				let path = res.tempFiles[0].tempFilePath;
				loading.begin();

				wx.uploadFile({
					filePath: path,
					url: url,
					name: 'file',
					success: (r) => {
						debugger
						let data = JSON.parse(r.data);
						let iu = getPortraitUrl(
							data.data, null
						);
						console.debug(`imgurl: ${iu}`);

						$this.setData({
							tximg: iu,
						});
					},
					fail: (e) => {
						console.log(e);
					},
					complete: () => {
						loading.end();
					}
				});
			}
		})
	},

	/**
	 * 生命周期函数--监听页面加载
	 */
	onLoad: function (options) {
		this._init();
	},

	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady: function () {

	},

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow: function () {

	},

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide: function () {

	},

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload: function () {

	},

	/**
	 * 页面相关事件处理函数--监听用户下拉动作
	 */
	onPullDownRefresh: function () {

	},

	/**
	 * 页面上拉触底事件的处理函数
	 */
	onReachBottom: function () {

	},

	/**
	 * 用户点击右上角分享
	 */
	onShareAppMessage: function () {

	},

	_init: async function () {
		await app.getOpenidReady();

		let [
			userInfo, recruiteeInfo
		] = await Promise.all([
			UserService.loadUserInfo(),
			UserService.loadRcruiteeInfo(),
		]);

		this.setData({
			tximg: getPortraitUrl(
				recruiteeInfo.portraitPath,
				userInfo.avatarurl,
			),
			zsname: recruiteeInfo.realName,
			index: recruiteeInfo.gender,
		});
	},

	saveResume: async function () {

	}
})